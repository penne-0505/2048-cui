name: Build and Release

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        pip install poetry
        
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false
        
    - name: Install dependencies
      run: |
        poetry install --extras build
        
    - name: Build Linux executable
      run: |
        poetry run python build.py
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          dist/2048-cli

  build-windows:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: utf-8
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        pip install poetry
        
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false
        
    - name: Install dependencies
      run: |
        poetry install --extras build
        
    - name: Build Windows executable
      run: |
        poetry run python build.py
        
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: dist/2048-cli.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Generate release notes
      id: release_notes
      run: |
        # Get the previous tag
        PREV_TAG=$(git tag --sort=-version:refname | head -2 | tail -1)
        
        # Get current tag
        CURRENT_TAG=${GITHUB_REF#refs/tags/}
        
        # Generate changelog
        CHANGELOG=""
        if [ ! -z "$PREV_TAG" ]; then
          CHANGELOG=$(git log ${PREV_TAG}..HEAD --oneline --pretty=format:"- %s")
        else
          CHANGELOG=$(git log --oneline --pretty=format:"- %s")
        fi
        
        # Create release body
        cat << EOF > release_body.md
        ## 2048-CLI Release ${CURRENT_TAG}
        
        ### Changes
        ${CHANGELOG}
        
        ### Downloads
        - **Linux**: \`2048-cli\` (binary)
        - **Windows**: \`2048-cli.exe\`
        
        ### インストール方法
        1. 対応するファイルをダウンロード
        2. 実行権限を付与（Linux/macOS）
        3. ターミナルで実行
        
        ### 使用方法
        \`\`\`bash
        # Linux binary
        chmod +x 2048-cli
        ./2048-cli
        
        # Windows
        2048-cli.exe
        \`\`\`
        EOF
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          linux-builds/2048-cli
          windows-builds/2048-cli.exe
        body_path: release_body.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}