name: Build and Release

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        pip install poetry
        
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false
        
    - name: Install dependencies
      run: |
        poetry install --extras build
        
    - name: Build Linux executable
      run: |
        poetry run python build.py
    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          dist/2048-cli

  build-windows:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: utf-8
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        pip install poetry
        
    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false
        
    - name: Install dependencies
      run: |
        poetry install --extras build
        
    - name: Build Windows executable
      run: |
        poetry run python build.py
        
    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: dist/2048-cli.exe

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          linux-builds/2048-cli
          windows-builds/2048-cli.exe
        body: |
          ## 2048-CLI Release
          
          ### Downloads
          - **Linux**: `2048-cli` (binary)
          - **Windows**: `2048-cli.exe`
          
          ### インストール方法
          1. 対応するファイルをダウンロード
          2. 実行権限を付与（Linux/macOS）
          3. ターミナルで実行
          
          ### 使用方法
          ```bash
          # Linux binary
          chmod +x 2048-cli
          ./2048-cli
          
          # Windows
          2048-cli.exe
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}